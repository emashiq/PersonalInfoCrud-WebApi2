//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Personal_Info_CRUD.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PersonalInfoEntities : DbContext
    {
        public PersonalInfoEntities()
            : base("name=PersonalInfoEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Info> Infoes { get; set; }
    
        public virtual int SP_AddPersonalInfo(string name, Nullable<int> age, Nullable<System.DateTime> dOB, string address, string status)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var ageParameter = age.HasValue ?
                new ObjectParameter("Age", age) :
                new ObjectParameter("Age", typeof(int));
    
            var dOBParameter = dOB.HasValue ?
                new ObjectParameter("DOB", dOB) :
                new ObjectParameter("DOB", typeof(System.DateTime));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_AddPersonalInfo", nameParameter, ageParameter, dOBParameter, addressParameter, statusParameter);
        }
    
        public virtual int SP_DeletePersonalInfo(Nullable<int> sL)
        {
            var sLParameter = sL.HasValue ?
                new ObjectParameter("SL", sL) :
                new ObjectParameter("SL", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DeletePersonalInfo", sLParameter);
        }
    
        public virtual int SP_SeletePersonalInfo(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SeletePersonalInfo", nameParameter);
        }
    
        public virtual int SP_UpdatePersonalInfo(string name, Nullable<int> age, Nullable<System.DateTime> dOB, string address, string status, Nullable<System.DateTime> dataInsertTime, Nullable<int> sL)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var ageParameter = age.HasValue ?
                new ObjectParameter("Age", age) :
                new ObjectParameter("Age", typeof(int));
    
            var dOBParameter = dOB.HasValue ?
                new ObjectParameter("DOB", dOB) :
                new ObjectParameter("DOB", typeof(System.DateTime));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var dataInsertTimeParameter = dataInsertTime.HasValue ?
                new ObjectParameter("DataInsertTime", dataInsertTime) :
                new ObjectParameter("DataInsertTime", typeof(System.DateTime));
    
            var sLParameter = sL.HasValue ?
                new ObjectParameter("SL", sL) :
                new ObjectParameter("SL", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UpdatePersonalInfo", nameParameter, ageParameter, dOBParameter, addressParameter, statusParameter, dataInsertTimeParameter, sLParameter);
        }
    }
}
